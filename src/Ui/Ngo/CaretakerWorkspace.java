/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui.Ngo;

import Hospital.Encounter.Appointment;
import Ngo.CareTaker.Caretaker;
import Ngo.Children.Children;
import System.Directories.DB4OUtil;
import System.Directories.DataValidation;
import System.Directories.MainSystem;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chinm
 */
public class CaretakerWorkspace extends javax.swing.JPanel {

    /**
     * Creates new form CaretakerWorkspace
     */
    private JPanel cardPanel;
    private Caretaker caretaker;
    private MainSystem system;
    private DB4OUtil dB4OUtil;
    private final String FILENAME = "ProjectDataBank.db4o";
    private DataValidation data;
    
    public CaretakerWorkspace(Caretaker caretaker,JPanel cardPanel,MainSystem system,DB4OUtil dB4OUtil ) {
        initComponents();
        this.cardPanel = cardPanel;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        this.data = new DataValidation();
        populateChildrenCreateTable();
        populateChildrenHealthTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPaneCaretaker = new javax.swing.JSplitPane();
        panelControl = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnHealth = new javax.swing.JButton();
        btnChildren = new javax.swing.JButton();
        panelWork = new javax.swing.JPanel();
        panelHome = new javax.swing.JPanel();
        lblTitle2 = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        panelHealth = new javax.swing.JPanel();
        lblTitle6 = new javax.swing.JLabel();
        ScrollPane5 = new javax.swing.JScrollPane();
        tableChildrenHealth = new javax.swing.JTable();
        btnAppointment = new javax.swing.JButton();
        btnAutofill1 = new javax.swing.JButton();
        ScrollPane9 = new javax.swing.JScrollPane();
        tableChildrenAppoinment = new javax.swing.JTable();
        lblApplicationNo1 = new javax.swing.JLabel();
        txtApplicationNo = new javax.swing.JTextField();
        lblChildName1 = new javax.swing.JLabel();
        txtChildName = new javax.swing.JTextField();
        lblChildAge1 = new javax.swing.JLabel();
        lblChildName8 = new javax.swing.JLabel();
        lblChildName9 = new javax.swing.JLabel();
        txtAppDate = new javax.swing.JTextField();
        lblStatus1 = new javax.swing.JLabel();
        txtStatus1 = new javax.swing.JTextField();
        lblChildName10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtChildComment = new javax.swing.JTextArea();
        txtChildAge = new javax.swing.JTextField();
        txtChildGender = new javax.swing.JTextField();
        panelChildren = new javax.swing.JPanel();
        lblTitle9 = new javax.swing.JLabel();
        ScrollPane7 = new javax.swing.JScrollPane();
        tableChildrenCreate = new javax.swing.JTable();
        lblChildrenName = new javax.swing.JLabel();
        txtChildrenName = new javax.swing.JTextField();
        lblChildrenAge = new javax.swing.JLabel();
        txtChildrenAge = new javax.swing.JTextField();
        lblChildrenId = new javax.swing.JLabel();
        txtChildrenId = new javax.swing.JTextField();
        lblChildrenDob = new javax.swing.JLabel();
        txtChildrenDOB = new javax.swing.JTextField();
        lblChildrenGender = new javax.swing.JLabel();
        cmbChildrenGender = new javax.swing.JComboBox<>();
        lblChildrenSearch = new javax.swing.JLabel();
        txtChildrenSearch = new javax.swing.JTextField();
        btnChildrenView = new javax.swing.JButton();
        btnChildrenDelete = new javax.swing.JButton();
        btnChildrenCreate = new javax.swing.JButton();
        btnChildrenUpdate = new javax.swing.JButton();
        lblChildrenRole = new javax.swing.JLabel();
        txtChildrenRole = new javax.swing.JTextField();
        lblChildrenCaretaker = new javax.swing.JLabel();
        txtChildrenCaretaker = new javax.swing.JTextField();

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnHealth.setText("Health");
        btnHealth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHealthActionPerformed(evt);
            }
        });

        btnChildren.setText("Children");
        btnChildren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlLayout = new javax.swing.GroupLayout(panelControl);
        panelControl.setLayout(panelControlLayout);
        panelControlLayout.setHorizontalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnChildren, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelControlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelControlLayout.createSequentialGroup()
                        .addComponent(btnHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelControlLayout.setVerticalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(btnHome)
                .addGap(18, 18, 18)
                .addComponent(btnHealth)
                .addGap(18, 18, 18)
                .addComponent(btnChildren)
                .addContainerGap(492, Short.MAX_VALUE))
        );

        SplitPaneCaretaker.setLeftComponent(panelControl);

        panelWork.setLayout(new java.awt.CardLayout());

        lblTitle2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle2.setText("NGO");

        lblRole.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblRole.setText("Role: Caretaker");

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHomeLayout = new javax.swing.GroupLayout(panelHome);
        panelHome.setLayout(panelHomeLayout);
        panelHomeLayout.setHorizontalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                .addContainerGap(528, Short.MAX_VALUE)
                .addGroup(panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogOut)
                    .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );
        panelHomeLayout.setVerticalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle2)
                .addGap(57, 57, 57)
                .addComponent(lblRole)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogOut)
                .addContainerGap(548, Short.MAX_VALUE))
        );

        panelWork.add(panelHome, "card2");

        lblTitle6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle6.setText("Children Health");

        tableChildrenHealth.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Children Id", "Name", "Age", "DOB", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane5.setViewportView(tableChildrenHealth);

        btnAppointment.setText("Book Appointment");
        btnAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentActionPerformed(evt);
            }
        });

        btnAutofill1.setText("Autofill");
        btnAutofill1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutofill1ActionPerformed(evt);
            }
        });

        tableChildrenAppoinment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Appointment Id", "Name", "Age", "Gender", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane9.setViewportView(tableChildrenAppoinment);

        lblApplicationNo1.setText("Appointment Id:");

        lblChildName1.setText("Name:");

        txtChildName.setEditable(false);

        lblChildAge1.setText("Age:");

        lblChildName8.setText("Gender:");

        lblChildName9.setText("Date:");

        lblStatus1.setText("Status:");

        txtStatus1.setEditable(false);
        txtStatus1.setText("Pending");

        lblChildName10.setText("Comment:");

        txtChildComment.setColumns(20);
        txtChildComment.setRows(5);
        jScrollPane5.setViewportView(txtChildComment);

        txtChildAge.setEditable(false);

        txtChildGender.setEditable(false);

        javax.swing.GroupLayout panelHealthLayout = new javax.swing.GroupLayout(panelHealth);
        panelHealth.setLayout(panelHealthLayout);
        panelHealthLayout.setHorizontalGroup(
            panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHealthLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAutofill1)
                    .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHealthLayout.createSequentialGroup()
                            .addComponent(btnAppointment)
                            .addGap(256, 256, 256))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHealthLayout.createSequentialGroup()
                            .addComponent(ScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)))
                    .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(panelHealthLayout.createSequentialGroup()
                            .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panelHealthLayout.createSequentialGroup()
                                    .addComponent(lblChildName9)
                                    .addGap(66, 66, 66)
                                    .addComponent(txtAppDate, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelHealthLayout.createSequentialGroup()
                                        .addComponent(lblChildName8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtChildGender, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelHealthLayout.createSequentialGroup()
                                        .addComponent(lblChildAge1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtChildAge, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelHealthLayout.createSequentialGroup()
                                            .addComponent(lblChildName1)
                                            .addGap(66, 66, 66)
                                            .addComponent(txtChildName, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelHealthLayout.createSequentialGroup()
                                            .addComponent(lblApplicationNo1)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtApplicationNo, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHealthLayout.createSequentialGroup()
                                    .addComponent(lblStatus1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHealthLayout.createSequentialGroup()
                                    .addComponent(lblChildName10)
                                    .addGap(27, 27, 27)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(ScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        panelHealthLayout.setVerticalGroup(
            panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHealthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle6)
                .addGap(59, 59, 59)
                .addComponent(ScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAutofill1)
                .addGap(33, 33, 33)
                .addComponent(ScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelHealthLayout.createSequentialGroup()
                        .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApplicationNo1)
                            .addComponent(txtApplicationNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblChildName1)
                            .addComponent(txtChildName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblChildAge1)
                            .addComponent(txtChildAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblChildName8)
                            .addComponent(txtChildGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelHealthLayout.createSequentialGroup()
                        .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStatus1))
                        .addGap(28, 28, 28)
                        .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChildName10)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(panelHealthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildName9)
                    .addComponent(txtAppDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(btnAppointment)
                .addGap(29, 29, 29))
        );

        panelWork.add(panelHealth, "card7");

        lblTitle9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle9.setText("Children");

        tableChildrenCreate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Children Id", "Name", "Age", "DOB", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane7.setViewportView(tableChildrenCreate);

        lblChildrenName.setText("Name:");

        lblChildrenAge.setText("Age:");

        lblChildrenId.setText("Children Id:");

        lblChildrenDob.setText("DOB:");

        lblChildrenGender.setText("Gender:");

        cmbChildrenGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));

        lblChildrenSearch.setText("Search:");

        btnChildrenView.setText("View");
        btnChildrenView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenViewActionPerformed(evt);
            }
        });

        btnChildrenDelete.setText("Delete");
        btnChildrenDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenDeleteActionPerformed(evt);
            }
        });

        btnChildrenCreate.setText("Create");
        btnChildrenCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenCreateActionPerformed(evt);
            }
        });

        btnChildrenUpdate.setText("Update");
        btnChildrenUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChildrenUpdateActionPerformed(evt);
            }
        });

        lblChildrenRole.setText("Role:");

        txtChildrenRole.setEditable(false);
        txtChildrenRole.setText("Child");

        lblChildrenCaretaker.setText("Caretaker:");

        javax.swing.GroupLayout panelChildrenLayout = new javax.swing.GroupLayout(panelChildren);
        panelChildren.setLayout(panelChildrenLayout);
        panelChildrenLayout.setHorizontalGroup(
            panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelChildrenLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelChildrenLayout.createSequentialGroup()
                        .addComponent(btnChildrenView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnChildrenDelete))
                    .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panelChildrenLayout.createSequentialGroup()
                            .addComponent(lblChildrenSearch)
                            .addGap(18, 18, 18)
                            .addComponent(txtChildrenSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelChildrenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblChildrenRole)
                        .addComponent(lblChildrenGender)
                        .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelChildrenLayout.createSequentialGroup()
                                .addComponent(lblChildrenId)
                                .addGap(18, 18, 18)
                                .addComponent(txtChildrenId, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelChildrenLayout.createSequentialGroup()
                                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblChildrenName)
                                    .addComponent(lblChildrenAge)
                                    .addComponent(lblChildrenDob))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtChildrenAge, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtChildrenName, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtChildrenDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbChildrenGender, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtChildrenRole, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelChildrenLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(btnChildrenCreate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnChildrenUpdate))
                                    .addComponent(txtChildrenCaretaker, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panelChildrenLayout.createSequentialGroup()
                        .addComponent(lblChildrenCaretaker)
                        .addGap(282, 282, 282)))
                .addGap(199, 199, 199))
        );
        panelChildrenLayout.setVerticalGroup(
            panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChildrenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle9)
                .addGap(94, 94, 94)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildrenSearch)
                    .addComponent(txtChildrenSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChildrenView)
                    .addComponent(btnChildrenDelete))
                .addGap(23, 23, 23)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildrenId)
                    .addComponent(txtChildrenId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildrenName)
                    .addComponent(txtChildrenName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildrenAge)
                    .addComponent(txtChildrenAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildrenDob)
                    .addComponent(txtChildrenDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildrenGender)
                    .addComponent(cmbChildrenGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildrenRole)
                    .addComponent(txtChildrenRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChildrenCaretaker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChildrenCaretaker))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(panelChildrenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChildrenCreate)
                    .addComponent(btnChildrenUpdate))
                .addGap(36, 36, 36))
        );

        panelWork.add(panelChildren, "card10");

        SplitPaneCaretaker.setRightComponent(panelWork);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneCaretaker)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneCaretaker)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        //        CardLayout cardLayout = (CardLayout) panelWork.getLayout();
        //        panelWork.add("NgoHome", panelHome);
        //        cardLayout.next(panelWork);
        panelWork.removeAll();
        panelWork.add(panelHome);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnHealthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHealthActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelHealth);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnHealthActionPerformed

    private void btnChildrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelChildren);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnChildrenActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardPanel.remove(this);
        cardLayout.previous(cardPanel);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentActionPerformed
        // TODO add your handling code here:
        String appNo = txtApplicationNo.getText();
        String name = txtChildName.getText();
        Integer age = Integer.valueOf(txtChildAge.getText());

        String gender = txtChildGender.getText();
        String date  = txtAppDate.getText();
        String status = txtStatus1.getText();

        String comm = txtChildComment.getText();

        Appointment newApp = system.getHosAppList().addAppointment();

        newApp.setAppNo(appNo);
        newApp.setPatient(name);
        newApp.setAge(age);

        newApp.setGender(gender);
        newApp.setDate(name);
        newApp.setStatus(status);

        newApp.setComment(comm);

        JOptionPane.showMessageDialog(this, "Application submitted successfully");

        txtApplicationNo.setText("");
        txtChildName.setText("");
        txtChildAge.setText("");

        txtChildGender.setText("");

        txtChildComment.setText("");

        populateAppoinmentTable();

    }//GEN-LAST:event_btnAppointmentActionPerformed

    private void btnAutofill1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutofill1ActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenHealth.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenHealth.getModel();
            Children selApp = (Children) model.getValueAt(selectedRowIndex,0);

            //            txtApplicationNo.setText(selApp.getAppNo());
            txtChildName.setText(selApp.getName());
            txtChildAge.setText(String.valueOf(selApp.getAge()));

            txtChildGender.setText(selApp.getGender());
        }
    }//GEN-LAST:event_btnAutofill1ActionPerformed

    private void btnChildrenViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selMan = (Children) model.getValueAt(selectedRowIndex,0);

            txtChildrenId.setText(selMan.getChildrenId());
            txtChildrenName.setText(selMan.getName());
            txtChildrenAge.setText(String.valueOf(selMan.getAge()));
            txtChildrenDOB.setText(selMan.getDob());
            cmbChildrenGender.setSelectedItem(selMan.getGender());
            txtChildrenRole.setText(selMan.getRole());
            txtChildrenCaretaker.setText(selMan.getCaretaker());
        }
    }//GEN-LAST:event_btnChildrenViewActionPerformed

    private void btnChildrenDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selectedMan = (Children) model.getValueAt(selectedRowIndex,0);

            system.getChildrenList().deleteChildren(selectedMan);

            JOptionPane.showMessageDialog(this, "Child deleted successfully.");

            //            dB4OUtil.storeSystem(system);
            populateChildrenCreateTable();
        }
    }//GEN-LAST:event_btnChildrenDeleteActionPerformed

    private void btnChildrenCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenCreateActionPerformed
        // TODO add your handling code here:
        String id = txtChildrenId.getText();
        String name = txtChildrenName.getText();
        Integer age = Integer.valueOf(txtChildrenAge.getText());
        String dob = txtChildrenDOB.getText();
        String gender = String.valueOf(cmbChildrenGender.getSelectedItem());
        String role = txtChildrenRole.getText();
        String caretaker = txtChildrenCaretaker.getText();

        Children newManager = system.getChildrenList().addChildren();

        newManager.setChildrenId(id);
        newManager.setName(name);
        newManager.setAge(age);
        newManager.setDob(dob);
        newManager.setGender(gender);
        newManager.setRole(role);
        newManager.setCaretaker(caretaker);

        JOptionPane.showMessageDialog(this, "Child created successfully");

        txtChildrenId.setText("");
        txtChildrenName.setText("");
        txtChildrenAge.setText("");
        txtChildrenDOB.setText("");

        //        dB4OUtil.storeSystem(system);
        populateChildrenCreateTable();
    
        populateChildrenHealthTable();
    }//GEN-LAST:event_btnChildrenCreateActionPerformed

    private void btnChildrenUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChildrenUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableChildrenCreate.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
            Children selMan = (Children) model.getValueAt(selectedRowIndex,0);

            selMan.setChildrenId(txtChildrenId.getText());
            selMan.setName(txtChildrenName.getText());
            selMan.setAge(Integer.valueOf(txtChildrenAge.getText()));
            selMan.setDob(txtChildrenDOB.getText());
            selMan.setGender(String.valueOf(cmbChildrenGender.getSelectedItem()));
            selMan.setRole(txtChildrenRole.getText());
            selMan.setCaretaker(txtChildrenCaretaker.getText());

            JOptionPane.showMessageDialog(this, "Child updated successfully");

            //            dB4OUtil.storeSystem(system);
            populateChildrenCreateTable();
            
            populateChildrenHealthTable();
            
        }
    }//GEN-LAST:event_btnChildrenUpdateActionPerformed

    private void populateChildrenCreateTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenCreate.getModel();
        model.setRowCount(0);
        
//        
            for(Children c: system.getChildrenList().getChildrenList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getAge();
                row[3] = c.getDob();
                row[4] = c.getGender();
                model.addRow(row);
            }
      }
      
      private void populateChildrenHealthTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenHealth.getModel();
        model.setRowCount(0);
        
//        
            for(Children c: system.getChildrenList().getChildrenList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getName();
                row[2] = c.getAge();
                row[3] = c.getDob();
                row[4] = c.getGender();
                model.addRow(row);
            }
      }
      
      private void populateAppoinmentTable(){
        DefaultTableModel model = (DefaultTableModel) tableChildrenAppoinment.getModel();
        model.setRowCount(0);
        
//        
            for(Appointment man: system.getHosAppList().getHosAppList()){

                Object[] row = new Object[5];
                row[0] = man; 
                row[1] = man.getPatient();
                row[2] = man.getAge();
                row[3] = man.getGender();
//                row[4] = man.getNgo();
                row[4] = man.getStatus();
                model.addRow(row);
            }
          
      }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane5;
    private javax.swing.JScrollPane ScrollPane7;
    private javax.swing.JScrollPane ScrollPane9;
    private javax.swing.JSplitPane SplitPaneCaretaker;
    private javax.swing.JButton btnAppointment;
    private javax.swing.JButton btnAutofill1;
    private javax.swing.JButton btnChildren;
    private javax.swing.JButton btnChildrenCreate;
    private javax.swing.JButton btnChildrenDelete;
    private javax.swing.JButton btnChildrenUpdate;
    private javax.swing.JButton btnChildrenView;
    private javax.swing.JButton btnHealth;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JComboBox<String> cmbChildrenGender;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblApplicationNo1;
    private javax.swing.JLabel lblChildAge1;
    private javax.swing.JLabel lblChildName1;
    private javax.swing.JLabel lblChildName10;
    private javax.swing.JLabel lblChildName8;
    private javax.swing.JLabel lblChildName9;
    private javax.swing.JLabel lblChildrenAge;
    private javax.swing.JLabel lblChildrenCaretaker;
    private javax.swing.JLabel lblChildrenDob;
    private javax.swing.JLabel lblChildrenGender;
    private javax.swing.JLabel lblChildrenId;
    private javax.swing.JLabel lblChildrenName;
    private javax.swing.JLabel lblChildrenRole;
    private javax.swing.JLabel lblChildrenSearch;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblStatus1;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblTitle6;
    private javax.swing.JLabel lblTitle9;
    private javax.swing.JPanel panelChildren;
    private javax.swing.JPanel panelControl;
    private javax.swing.JPanel panelHealth;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel panelWork;
    private javax.swing.JTable tableChildrenAppoinment;
    private javax.swing.JTable tableChildrenCreate;
    private javax.swing.JTable tableChildrenHealth;
    private javax.swing.JTextField txtAppDate;
    private javax.swing.JTextField txtApplicationNo;
    private javax.swing.JTextField txtChildAge;
    private javax.swing.JTextArea txtChildComment;
    private javax.swing.JTextField txtChildGender;
    private javax.swing.JTextField txtChildName;
    private javax.swing.JTextField txtChildrenAge;
    private javax.swing.JTextField txtChildrenCaretaker;
    private javax.swing.JTextField txtChildrenDOB;
    private javax.swing.JTextField txtChildrenId;
    private javax.swing.JTextField txtChildrenName;
    private javax.swing.JTextField txtChildrenRole;
    private javax.swing.JTextField txtChildrenSearch;
    private javax.swing.JTextField txtStatus1;
    // End of variables declaration//GEN-END:variables
}
