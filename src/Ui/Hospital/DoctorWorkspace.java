/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui.Hospital;

import Hospital.Doctor.Doctor;
import Hospital.Encounter.Encounter;
import Hospital.Patient.Patient;
import Ngo.NgoManager.NgoManager;
import System.Directories.DB4OUtil;
import System.Directories.MainSystem;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chinm
 */
public class DoctorWorkspace extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkspace
     */
    
    private JPanel cardPanel;
    private NgoManager ngoManager;
    private MainSystem system;
    private Doctor doc;
    private DB4OUtil dB4OUtil;
    private final String FILENAME = "ProjectDataBank.db4o";
    
    public DoctorWorkspace(Doctor doc, JPanel cardPanel,MainSystem system,DB4OUtil dB4OUtil) {
        initComponents();
        this.doc= doc;
        this.cardPanel = cardPanel;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        
        populateHospitalEncounterTable();
        populatePatientTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        panelControl = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnPatient = new javax.swing.JButton();
        btnEncounter = new javax.swing.JButton();
        panelWork = new javax.swing.JPanel();
        panelEncounter = new javax.swing.JPanel();
        lblTitleEncounter = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableEncounter = new javax.swing.JTable();
        btnEncounterCreate = new javax.swing.JButton();
        btnEncounterView = new javax.swing.JButton();
        btnEncounterUpdate = new javax.swing.JButton();
        btnEncounterDelete = new javax.swing.JButton();
        lblEncounterNo = new javax.swing.JLabel();
        lblEncounterHospital = new javax.swing.JLabel();
        lblDoctorEncounterUsername = new javax.swing.JLabel();
        lblEncounterPatientUsername = new javax.swing.JLabel();
        lblEncounterDate = new javax.swing.JLabel();
        txtEncounterNo = new javax.swing.JTextField();
        txtEncounterHospital = new javax.swing.JTextField();
        txtEncounterDoctorUsername = new javax.swing.JTextField();
        txtEncounterPatientUsername = new javax.swing.JTextField();
        txtEncounterDate = new javax.swing.JTextField();
        lblEncounterBP = new javax.swing.JLabel();
        txtEncounterBP = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        lblEncounterTemperature = new javax.swing.JLabel();
        txtEncounterTemperature = new javax.swing.JTextField();
        lblEncounterMedicine = new javax.swing.JLabel();
        txtEncounterMedicine = new javax.swing.JTextField();
        lblEncounterMedicineQuantity = new javax.swing.JLabel();
        txtMedicineQuantity = new javax.swing.JTextField();
        panelHome = new javax.swing.JPanel();
        lblRole = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        lblTitleHospital = new javax.swing.JLabel();
        panelPatient = new javax.swing.JPanel();
        lblTitlePatient = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePatient = new javax.swing.JTable();
        btnPatientCreate = new javax.swing.JButton();
        btnPatientView = new javax.swing.JButton();
        btnPatientUpdate = new javax.swing.JButton();
        btnPatientDelete = new javax.swing.JButton();
        lblPatientRole = new javax.swing.JLabel();
        txtPatientRole = new javax.swing.JTextField();
        lblPatientID = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        lblPatientUsername = new javax.swing.JLabel();
        txtPatientUsername = new javax.swing.JTextField();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblPatientAge = new javax.swing.JLabel();
        txtPatientAge = new javax.swing.JTextField();
        lblPatientGender = new javax.swing.JLabel();
        cbPatientGender = new javax.swing.JComboBox<>();
        lblPatientEmail = new javax.swing.JLabel();
        txtPatientEmail = new javax.swing.JTextField();
        lblPatientPhone = new javax.swing.JLabel();
        txtPatientPhone = new javax.swing.JTextField();
        lblPatientPassword = new javax.swing.JLabel();
        txtPatientPassword = new javax.swing.JTextField();
        lblPatientUsername1 = new javax.swing.JLabel();
        txtPatDoc = new javax.swing.JTextField();

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnPatient.setText("Patient");
        btnPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientActionPerformed(evt);
            }
        });

        btnEncounter.setText("Encounter");
        btnEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlLayout = new javax.swing.GroupLayout(panelControl);
        panelControl.setLayout(panelControlLayout);
        panelControlLayout.setHorizontalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelControlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEncounter, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPatient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelControlLayout.setVerticalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(btnHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPatient)
                .addGap(18, 18, 18)
                .addComponent(btnEncounter)
                .addContainerGap(433, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(panelControl);

        lblTitleEncounter.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTitleEncounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleEncounter.setText("ENCOUNTER");

        tableEncounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Encounter No", "Doctor UserName", "Patient Username", "BP", "Temperature"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableEncounter);

        btnEncounterCreate.setText("Create");
        btnEncounterCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterCreateActionPerformed(evt);
            }
        });

        btnEncounterView.setText("View");
        btnEncounterView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterViewActionPerformed(evt);
            }
        });

        btnEncounterUpdate.setText("Update");
        btnEncounterUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterUpdateActionPerformed(evt);
            }
        });

        btnEncounterDelete.setText("Delete");
        btnEncounterDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterDeleteActionPerformed(evt);
            }
        });

        lblEncounterNo.setText("Encounter No");

        lblEncounterHospital.setText("Hospital");

        lblDoctorEncounterUsername.setText("Doctor Username");

        lblEncounterPatientUsername.setText("Patient Username");

        lblEncounterDate.setText("Date");

        txtEncounterHospital.setEditable(false);
        txtEncounterHospital.setText("Hospital");
        txtEncounterHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncounterHospitalActionPerformed(evt);
            }
        });

        lblEncounterBP.setText("BP");

        jLabel9.setText("Search");

        lblEncounterTemperature.setText("Temperature");

        lblEncounterMedicine.setText("Medicine");

        lblEncounterMedicineQuantity.setText("Medicine Quantity");

        txtMedicineQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicineQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEncounterLayout = new javax.swing.GroupLayout(panelEncounter);
        panelEncounter.setLayout(panelEncounterLayout);
        panelEncounterLayout.setHorizontalGroup(
            panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEncounterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleEncounter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelEncounterLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtEncounterHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelEncounterLayout.createSequentialGroup()
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEncounterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEncounterHospital)
                            .addComponent(lblDoctorEncounterUsername)
                            .addComponent(lblEncounterPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEncounterDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEncounterDoctorUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEncounterNo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEncounterPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(210, 210, 210)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEncounterBP)
                    .addComponent(lblEncounterTemperature)
                    .addComponent(lblEncounterMedicine)
                    .addComponent(lblEncounterMedicineQuantity))
                .addGap(39, 39, 39)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtEncounterMedicine, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(txtEncounterTemperature, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEncounterBP, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMedicineQuantity))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEncounterLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelEncounterLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(28, 28, 28)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelEncounterLayout.createSequentialGroup()
                            .addComponent(btnEncounterCreate)
                            .addGap(18, 18, 18)
                            .addComponent(btnEncounterView)
                            .addGap(18, 18, 18)
                            .addComponent(btnEncounterUpdate)
                            .addGap(18, 18, 18)
                            .addComponent(btnEncounterDelete))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51))
        );
        panelEncounterLayout.setVerticalGroup(
            panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEncounterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEncounterCreate)
                    .addComponent(btnEncounterView)
                    .addComponent(btnEncounterUpdate)
                    .addComponent(btnEncounterDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEncounterLayout.createSequentialGroup()
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEncounterNo)
                            .addComponent(txtEncounterNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEncounterHospital)
                            .addComponent(txtEncounterHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelEncounterLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEncounterPatientUsername)
                                    .addComponent(txtEncounterPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEncounterDate)
                                    .addComponent(txtEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtEncounterDoctorUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDoctorEncounterUsername))))
                    .addGroup(panelEncounterLayout.createSequentialGroup()
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEncounterBP)
                            .addComponent(txtEncounterBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelEncounterLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEncounterMedicine)
                                    .addComponent(txtEncounterMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEncounterMedicineQuantity)
                                    .addComponent(txtMedicineQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblEncounterTemperature)
                                .addComponent(txtEncounterTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(139, 139, 139))
        );

        lblRole.setText("Role:  Doctor");

        btnLogOut.setText("Logout");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        lblTitleHospital.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitleHospital.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleHospital.setText("Hospital Management System");

        javax.swing.GroupLayout panelHomeLayout = new javax.swing.GroupLayout(panelHome);
        panelHome.setLayout(panelHomeLayout);
        panelHomeLayout.setHorizontalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblRole, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62))
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelHomeLayout.setVerticalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleHospital)
                .addGap(35, 35, 35)
                .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut)
                .addContainerGap(550, Short.MAX_VALUE))
        );

        lblTitlePatient.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTitlePatient.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitlePatient.setText("PATIENT");

        tablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Patient Age", "Patient Gender", "Patient Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablePatient);

        btnPatientCreate.setText("Create");
        btnPatientCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientCreateActionPerformed(evt);
            }
        });

        btnPatientView.setText("View");
        btnPatientView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientViewActionPerformed(evt);
            }
        });

        btnPatientUpdate.setText("Update");
        btnPatientUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientUpdateActionPerformed(evt);
            }
        });

        btnPatientDelete.setText("Delete");
        btnPatientDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientDeleteActionPerformed(evt);
            }
        });

        lblPatientRole.setText("Role");

        txtPatientRole.setEditable(false);
        txtPatientRole.setText("Patient");

        lblPatientID.setText("Patient ID");

        lblPatientUsername.setText("Username");

        lblPatientName.setText("Name");

        lblPatientAge.setText("Age");

        lblPatientGender.setText("Gender");

        cbPatientGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));

        lblPatientEmail.setText("Email");

        lblPatientPhone.setText("Phone No");

        lblPatientPassword.setText("Password");

        lblPatientUsername1.setText("Doctor Id:");

        javax.swing.GroupLayout panelPatientLayout = new javax.swing.GroupLayout(panelPatient);
        panelPatient.setLayout(panelPatientLayout);
        panelPatientLayout.setHorizontalGroup(
            panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPatientLayout.createSequentialGroup()
                        .addComponent(lblTitlePatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panelPatientLayout.createSequentialGroup()
                        .addComponent(btnPatientDelete)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPatientLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientRole)
                            .addComponent(lblPatientID)
                            .addComponent(lblPatientUsername)
                            .addComponent(lblPatientName)
                            .addComponent(lblPatientAge)
                            .addComponent(lblPatientGender)
                            .addComponent(lblPatientEmail)
                            .addComponent(lblPatientPhone))
                        .addGap(31, 31, 31)
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPatientRole)
                            .addComponent(txtPatientID)
                            .addComponent(txtPatientUsername)
                            .addComponent(txtPatientName)
                            .addComponent(txtPatientAge)
                            .addComponent(cbPatientGender, 0, 89, Short.MAX_VALUE)
                            .addComponent(txtPatientEmail)
                            .addComponent(txtPatientPhone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientUsername1)
                            .addComponent(lblPatientPassword))
                        .addGap(31, 31, 31)
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPatientPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(txtPatDoc))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPatientLayout.createSequentialGroup()
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPatientCreate)
                            .addComponent(btnPatientView)
                            .addComponent(btnPatientUpdate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        panelPatientLayout.setVerticalGroup(
            panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitlePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelPatientLayout.createSequentialGroup()
                        .addComponent(btnPatientCreate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPatientView)
                        .addGap(18, 18, 18)
                        .addComponent(btnPatientUpdate)))
                .addGap(18, 18, 18)
                .addComponent(btnPatientDelete)
                .addGap(48, 48, 48)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPatientPassword)
                        .addComponent(txtPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPatientRole)
                        .addComponent(txtPatientRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID)
                    .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientUsername1)
                    .addComponent(txtPatDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientUsername)
                    .addComponent(txtPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientAge)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientGender)
                    .addComponent(cbPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientEmail)
                    .addComponent(txtPatientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatientPhone)
                    .addComponent(txtPatientPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelWorkLayout = new javax.swing.GroupLayout(panelWork);
        panelWork.setLayout(panelWorkLayout);
        panelWorkLayout.setHorizontalGroup(
            panelWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 734, Short.MAX_VALUE)
            .addGroup(panelWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelWorkLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(panelWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelWorkLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(panelWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelWorkLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelWorkLayout.setVerticalGroup(
            panelWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
            .addGroup(panelWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelWorkLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(panelWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelWorkLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(panelWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelWorkLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jSplitPane1.setRightComponent(panelWork);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelHome);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelPatient);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnPatientActionPerformed

    private void btnEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterActionPerformed
        // TODO add your handling code here:
        panelWork.removeAll();
        panelWork.add(panelEncounter);
        panelWork.repaint();
        panelWork.revalidate();
    }//GEN-LAST:event_btnEncounterActionPerformed

    private void btnEncounterCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterCreateActionPerformed
        // TODO add your handling code here:
        String encounterNumber = txtEncounterNo.getText();
        String hospital = txtEncounterHospital.getText();
        String doctorUserName = txtEncounterDoctorUsername.getText();
        String patientUsername = txtEncounterPatientUsername.getText();
        String date = txtEncounterDate.getText();
        //        String status = txtEncounterBP1.getText();
        //        String ngo = String.valueOf(jComboBox1.getSelectedItem());
        String BP = txtEncounterBP.getText();
        String temperature = txtEncounterTemperature.getText();
        String medicine = txtEncounterMedicine.getText();
        String medicineQuantity = txtMedicineQuantity.getText();

        Encounter newEncounter = system.getEncounterlist().addHospitalEncounter();

        newEncounter.setEncounterNo(encounterNumber);
        newEncounter.setHospital(hospital);
        newEncounter.setDoctorUserName(doctorUserName);
        newEncounter.setPatientUsername(patientUsername);
        newEncounter.setDate(date);
        //        newEncounter.setStatus(status);
        //        newEncounter.setNgo(ngo);
        newEncounter.setBP(BP);
        newEncounter.setTemperature(temperature);
        newEncounter.setMedicine(medicine);
        newEncounter.setMedicineQuantity(medicineQuantity);

        JOptionPane.showMessageDialog(this, "Encounter created successfully");

        txtEncounterNo.setText("");
        txtEncounterHospital.setText("");
        txtEncounterDoctorUsername.setText("");
        txtEncounterPatientUsername.setText("");
        txtEncounterDate.setText("");

        txtEncounterBP.setText("");
        txtEncounterTemperature.setText("");
        txtEncounterMedicine.setText("");
        txtMedicineQuantity.setText("");

        populateHospitalEncounterTable();

    }//GEN-LAST:event_btnEncounterCreateActionPerformed

    private void btnEncounterViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableEncounter.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{

            DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
            Encounter enc = (Encounter) model.getValueAt(selectedRowIndex,0);

            txtEncounterNo.setText(enc.getEncounterNo());
            txtEncounterHospital.setText(enc.getHospital());
            txtEncounterDoctorUsername.setText(enc.getDoctorUserName());
            txtEncounterPatientUsername.setText(enc.getPatientUsername());
            txtEncounterDate.setText(enc.getDate());

            txtEncounterBP.setText(enc.getBP());
            txtEncounterTemperature.setText(enc.getTemperature());
            txtEncounterMedicine.setText(enc.getMedicine());
            txtMedicineQuantity.setText(enc.getMedicineQuantity());

        }

    }//GEN-LAST:event_btnEncounterViewActionPerformed

    private void btnEncounterUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableEncounter.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
            Encounter enc = (Encounter) model.getValueAt(selectedRowIndex,0);

            enc.setEncounterNo(txtEncounterNo.getText());
            enc.setHospital(txtEncounterHospital.getText());
            enc.setDoctorUserName(txtEncounterDoctorUsername.getText());
            enc.setPatientUsername(txtEncounterPatientUsername.getText());
            enc.setDate(txtEncounterDate.getText());

            enc.setBP(txtEncounterBP.getText());
            enc.setTemperature(txtEncounterTemperature.getText());
            enc.setMedicine(txtEncounterMedicine.getText());
            enc.setMedicineQuantity(txtMedicineQuantity.getText());

            JOptionPane.showMessageDialog(this, "Encounter updated successfully");

            populateHospitalEncounterTable();

        }
    }//GEN-LAST:event_btnEncounterUpdateActionPerformed

    private void btnEncounterDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableEncounter.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
            Encounter enc = (Encounter) model.getValueAt(selectedRowIndex,0);

            system.getEncounterlist().deleteHospitalEncounter(enc);

            JOptionPane.showMessageDialog(this, "Encounter deleted successfully.");

            populateHospitalEncounterTable();
        }
    }//GEN-LAST:event_btnEncounterDeleteActionPerformed

    private void txtMedicineQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicineQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicineQuantityActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        dB4OUtil.storeSystem(system);
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardPanel.remove(this);
        cardLayout.previous(cardPanel);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnPatientCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientCreateActionPerformed
        // TODO add your handling code here:
        String id = txtPatientID.getText();
        String name = txtPatientName.getText();
        String username = txtPatientUsername.getText();
        Integer age = Integer.valueOf(txtPatientAge.getText());
        String gender = String.valueOf(cbPatientGender.getSelectedItem());
        String role = txtPatientRole.getText();
        String emailid= txtPatientEmail.getText();
        //        Long phno = Long.parseLong(txtPatientPhone.getText());
        String pass = txtPatientPassword.getText();
        String doc = txtPatDoc.getText();

        Patient newPatient = system.getPatientList().addPatient();

        newPatient.setPatientId(id);
        newPatient.setName(name);
        newPatient.setUsername(username);
        newPatient.setAge(age);
        newPatient.setGender(gender);
        newPatient.setRole(role);
        newPatient.setEmailId(emailid);
        //        newPatient.setPhno(phno);
        newPatient.setPassword(pass);
        newPatient.setDocId(doc);
        JOptionPane.showMessageDialog(this, "Patient created successfully");

        txtPatientID.setText("");
        txtPatientName.setText("");
        txtPatientUsername.setText("");
        txtPatientAge.setText("");
        //      cbPatientGender
        txtPatientRole.setText("");
        txtPatientEmail.setText("");
        txtPatientPhone.setText("");
        txtPatientPassword.setText("");
        txtPatDoc.setText("");

        populatePatientTable();
    }//GEN-LAST:event_btnPatientCreateActionPerformed

    private void btnPatientViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tablePatient.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
            Patient pat = (Patient) model.getValueAt(selectedRowIndex,0);

            txtPatientID.setText(pat.getPatientId());
            txtPatientName.setText(pat.getName());
            txtPatientUsername.setText(pat.getUsername());
            txtPatientAge.setText(String.valueOf(pat.getAge()));
            cbPatientGender.setSelectedItem(pat.getGender());
            txtPatientRole.setText(pat.getRole());
            txtPatientEmail.setText(pat.getEmailId());
            txtPatientPhone.setText(String.valueOf(pat.getPhno()));
            txtPatientPassword.setText(pat.getPassword());
            txtPatDoc.setText(pat.getDocId());

        }
    }//GEN-LAST:event_btnPatientViewActionPerformed

    private void btnPatientUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientUpdateActionPerformed
        // TODO add your handling code here:

        Integer selectedRowIndex = tablePatient.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
            Patient pat = (Patient) model.getValueAt(selectedRowIndex,0);

            pat.setPatientId(txtPatientID.getText());
            pat.setName(txtPatientName.getText());
            pat.setUsername(txtPatientUsername.getText());
            pat.setAge(Integer.valueOf(txtPatientAge.getText()));
            pat.setGender(String.valueOf(cbPatientGender.getSelectedItem()));
            pat.setRole(txtPatientRole.getText());
            pat.setEmailId(txtPatientEmail.getText());
            //            pat.setPhno(Long.valueOf(txtPatientPhone.getText()));
            pat.setPassword(txtPatientPassword.getText());
            pat.setDocId(txtPatDoc.getText());
            JOptionPane.showMessageDialog(this, "Patient updated successfully");

            populatePatientTable();

        }

    }//GEN-LAST:event_btnPatientUpdateActionPerformed

    private void btnPatientDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tablePatient.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
            Patient pat = (Patient) model.getValueAt(selectedRowIndex,0);

            system.getPatientList().deletePatient(pat);

            JOptionPane.showMessageDialog(this, "Patient deleted successfully.");

            populatePatientTable();
        }

    }//GEN-LAST:event_btnPatientDeleteActionPerformed

    private void txtEncounterHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncounterHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncounterHospitalActionPerformed

    private void populatePatientTable(){
        DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
        model.setRowCount(0);
        
//        
//            for(Patient c: system.getDoctorList().getDoctorList()){
              for(Patient p: system.getPatientList().getPatientList()){
                  if (p.getDocId().equals(doc.getDoctorId())){
                    Object[] row = new Object[5];
                    row[0] = p;
                    row[1] = p.getName();
                    row[2] = p.getAge();
                    row[3] = p.getGender();
                    row[4] = p.getPhno();

                    model.addRow(row);
            }
                  
              }
            
    }
        
    private void populateHospitalEncounterTable(){
        DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
        model.setRowCount(0);
        
            for(Encounter e: system.getEncounterlist().getHospitalEncounterList()){
                if (e.getDoctorUserName().equals(doc.getUsername())){  
                    Object[] row = new Object[6];
                    row[0] = e;
                    row[1] = e.getDoctorUserName();
                    row[2] = e.getPatientUsername(); 
                    row[3] = e.getBP();
                    row[4] = e.getTemperature();
                    row[5] = e.getStatus();

                    model.addRow(row);
                }
            }
                
    }    
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncounter;
    private javax.swing.JButton btnEncounterCreate;
    private javax.swing.JButton btnEncounterDelete;
    private javax.swing.JButton btnEncounterUpdate;
    private javax.swing.JButton btnEncounterView;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnPatient;
    private javax.swing.JButton btnPatientCreate;
    private javax.swing.JButton btnPatientDelete;
    private javax.swing.JButton btnPatientUpdate;
    private javax.swing.JButton btnPatientView;
    private javax.swing.JComboBox<String> cbPatientGender;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lblDoctorEncounterUsername;
    private javax.swing.JLabel lblEncounterBP;
    private javax.swing.JLabel lblEncounterDate;
    private javax.swing.JLabel lblEncounterHospital;
    private javax.swing.JLabel lblEncounterMedicine;
    private javax.swing.JLabel lblEncounterMedicineQuantity;
    private javax.swing.JLabel lblEncounterNo;
    private javax.swing.JLabel lblEncounterPatientUsername;
    private javax.swing.JLabel lblEncounterTemperature;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientEmail;
    private javax.swing.JLabel lblPatientGender;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientPassword;
    private javax.swing.JLabel lblPatientPhone;
    private javax.swing.JLabel lblPatientRole;
    private javax.swing.JLabel lblPatientUsername;
    private javax.swing.JLabel lblPatientUsername1;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblTitleEncounter;
    private javax.swing.JLabel lblTitleHospital;
    private javax.swing.JLabel lblTitlePatient;
    private javax.swing.JPanel panelControl;
    private javax.swing.JPanel panelEncounter;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel panelPatient;
    private javax.swing.JPanel panelWork;
    private javax.swing.JTable tableEncounter;
    private javax.swing.JTable tablePatient;
    private javax.swing.JTextField txtEncounterBP;
    private javax.swing.JTextField txtEncounterDate;
    private javax.swing.JTextField txtEncounterDoctorUsername;
    private javax.swing.JTextField txtEncounterHospital;
    private javax.swing.JTextField txtEncounterMedicine;
    private javax.swing.JTextField txtEncounterNo;
    private javax.swing.JTextField txtEncounterPatientUsername;
    private javax.swing.JTextField txtEncounterTemperature;
    private javax.swing.JTextField txtMedicineQuantity;
    private javax.swing.JTextField txtPatDoc;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientEmail;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientPassword;
    private javax.swing.JTextField txtPatientPhone;
    private javax.swing.JTextField txtPatientRole;
    private javax.swing.JTextField txtPatientUsername;
    // End of variables declaration//GEN-END:variables
}
