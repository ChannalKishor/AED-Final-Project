/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui.Hospital;

import Funding.FundManager.FundManager;
import Hospital.Doctor.Doctor;
import Hospital.Encounter.Encounter;
import Hospital.Hospital.Hospital;
import Hospital.Patient.Patient;
import Ngo.CareTaker.Caretaker;
import Ngo.NgoManager.NgoManager;
import System.Directories.DB4OUtil;
import System.Directories.MainSystem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kishor
 */
public class HospitalAdminWorkspace extends javax.swing.JPanel {

    /**
     * Creates new form HospitalJPanel
     */
    private JPanel cardPanel;
    private NgoManager ngoManager;
    private MainSystem system;
    private DB4OUtil dB4OUtil;
    private final String FILENAME = "ProjectDataBank.db4o";
    
    
    public HospitalAdminWorkspace(JPanel cardPanel,MainSystem system,DB4OUtil dB4OUtil) {
        initComponents();
        this.cardPanel = cardPanel;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        
        populateDoctorTable();
        populatePatientTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField37 = new javax.swing.JTextField();
        SplitPaneDoctor = new javax.swing.JSplitPane();
        panelControlHospital = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnDoctor = new javax.swing.JButton();
        btnPatient = new javax.swing.JButton();
        btnEncounter = new javax.swing.JButton();
        btnHospital = new javax.swing.JButton();
        btnVitalSigns = new javax.swing.JButton();
        panelWorkHospital = new javax.swing.JPanel();
        panelHome = new javax.swing.JPanel();
        lblRole = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        lblTitleHospital = new javax.swing.JLabel();
        panelDoctor = new javax.swing.JPanel();
        lblTitleDoctor = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDoctor = new javax.swing.JTable();
        btnCreate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtDoctorRole = new javax.swing.JTextField();
        lblDoctorRole = new javax.swing.JLabel();
        lblDoctorID = new javax.swing.JLabel();
        txtDoctorID = new javax.swing.JTextField();
        lblDoctorUsername = new javax.swing.JLabel();
        txtDoctorUsername = new javax.swing.JTextField();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblDoctorAge = new javax.swing.JLabel();
        txtDoctorAge = new javax.swing.JTextField();
        lblDoctorGender = new javax.swing.JLabel();
        lblDoctorEmail = new javax.swing.JLabel();
        txtDoctorEmail = new javax.swing.JTextField();
        lblDoctorPhone = new javax.swing.JLabel();
        txtDoctorPhone = new javax.swing.JTextField();
        lblDoctorHospital = new javax.swing.JLabel();
        txtDoctorHospital = new javax.swing.JTextField();
        lblDoctorSpecialization = new javax.swing.JLabel();
        txtDoctorSpecialization = new javax.swing.JTextField();
        lblDoctorExperience = new javax.swing.JLabel();
        txtDoctorExperience = new javax.swing.JTextField();
        lblDoctorPassword = new javax.swing.JLabel();
        txtDoctorPassword = new javax.swing.JTextField();
        cbDoctorGender = new javax.swing.JComboBox<>();
        panelPatient = new javax.swing.JPanel();
        lblTitlePatient = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePatient = new javax.swing.JTable();
        btnPatientCreate = new javax.swing.JButton();
        btnPatientView = new javax.swing.JButton();
        btnPatientUpdate = new javax.swing.JButton();
        btnPatientDelete = new javax.swing.JButton();
        lblPatientRole = new javax.swing.JLabel();
        txtPatientRole = new javax.swing.JTextField();
        lblPatientID = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        lblPatientUsername = new javax.swing.JLabel();
        txtPatientUsername = new javax.swing.JTextField();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblPatientAge = new javax.swing.JLabel();
        txtPatientAge = new javax.swing.JTextField();
        lblPatientGender = new javax.swing.JLabel();
        cbPatientGender = new javax.swing.JComboBox<>();
        lblPatientEmail = new javax.swing.JLabel();
        txtPatientEmail = new javax.swing.JTextField();
        lblPatientPhone = new javax.swing.JLabel();
        txtPatientPhone = new javax.swing.JTextField();
        lblPatientPassword = new javax.swing.JLabel();
        txtPatientPassword = new javax.swing.JTextField();
        panelEncounter = new javax.swing.JPanel();
        lblTitleEncounter = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableEncounter = new javax.swing.JTable();
        btnEncounterCreate = new javax.swing.JButton();
        btnEncounterView = new javax.swing.JButton();
        btnEncounterUpdate = new javax.swing.JButton();
        btnEncounterDelete = new javax.swing.JButton();
        lblEncounterNo = new javax.swing.JLabel();
        lblEncounterHospital = new javax.swing.JLabel();
        lblDoctorEncounterUsername = new javax.swing.JLabel();
        lblEncounterPatientUsername = new javax.swing.JLabel();
        lblEncounterDate = new javax.swing.JLabel();
        txtEncounterNo = new javax.swing.JTextField();
        txtEncounterHospital = new javax.swing.JTextField();
        txtEncounterDoctorUsername = new javax.swing.JTextField();
        txtEncounterPatientUsername = new javax.swing.JTextField();
        txtEncounterDate = new javax.swing.JTextField();
        lblEncounterBP = new javax.swing.JLabel();
        txtEncounterBP = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        lblEncounterTemperature = new javax.swing.JLabel();
        txtEncounterTemperature = new javax.swing.JTextField();
        lblEncounterMedicine = new javax.swing.JLabel();
        txtEncounterMedicine = new javax.swing.JTextField();
        lblEncounterMedicineQuantity = new javax.swing.JLabel();
        txtMedicineQuantity = new javax.swing.JTextField();
        panelHospital = new javax.swing.JPanel();
        lblTitleHaHospital = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableHospital = new javax.swing.JTable();
        btnHospitalCreate = new javax.swing.JButton();
        btnHospitalView = new javax.swing.JButton();
        btnHospitalEdit = new javax.swing.JButton();
        btnHospitalDelete = new javax.swing.JButton();
        lblHospitalID = new javax.swing.JLabel();
        lblHospitalName = new javax.swing.JLabel();
        lblHospitalEmail = new javax.swing.JLabel();
        lblHospitalPhone = new javax.swing.JLabel();
        txtlblHospitalID = new javax.swing.JTextField();
        txtHospitalName = new javax.swing.JTextField();
        txtHospitalEmail = new javax.swing.JTextField();
        txtHospitalPhone = new javax.swing.JTextField();
        lblHospitalSearch = new javax.swing.JLabel();
        txtHospitalSearch = new javax.swing.JTextField();

        jTextField37.setText("jTextField37");

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnDoctor.setText("Doctor");
        btnDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorActionPerformed(evt);
            }
        });

        btnPatient.setText("Patient");

        btnEncounter.setText("Encounter");
        btnEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterActionPerformed(evt);
            }
        });

        btnHospital.setText("Hospital");
        btnHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalActionPerformed(evt);
            }
        });

        btnVitalSigns.setText("Vital Signs");

        javax.swing.GroupLayout panelControlHospitalLayout = new javax.swing.GroupLayout(panelControlHospital);
        panelControlHospital.setLayout(panelControlHospitalLayout);
        panelControlHospitalLayout.setHorizontalGroup(
            panelControlHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlHospitalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelControlHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHome, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDoctor, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPatient, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEncounter, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnHospital, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVitalSigns, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        panelControlHospitalLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDoctor, btnEncounter, btnHome, btnHospital, btnPatient});

        panelControlHospitalLayout.setVerticalGroup(
            panelControlHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlHospitalLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(btnHome)
                .addGap(18, 18, 18)
                .addComponent(btnDoctor)
                .addGap(18, 18, 18)
                .addComponent(btnPatient)
                .addGap(18, 18, 18)
                .addComponent(btnEncounter)
                .addGap(18, 18, 18)
                .addComponent(btnHospital)
                .addGap(18, 18, 18)
                .addComponent(btnVitalSigns)
                .addContainerGap(520, Short.MAX_VALUE))
        );

        SplitPaneDoctor.setLeftComponent(panelControlHospital);

        panelWorkHospital.setLayout(new java.awt.CardLayout());

        lblRole.setText("Role:  Hospital Admin");

        btnLogOut.setText("Logout");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        lblTitleHospital.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitleHospital.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleHospital.setText("HOSPITAL ADMIN HOME");

        javax.swing.GroupLayout panelHomeLayout = new javax.swing.GroupLayout(panelHome);
        panelHome.setLayout(panelHomeLayout);
        panelHomeLayout.setHorizontalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                .addContainerGap(580, Short.MAX_VALUE)
                .addGroup(panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblRole, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62))
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelHomeLayout.setVerticalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleHospital)
                .addGap(35, 35, 35)
                .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut)
                .addContainerGap(701, Short.MAX_VALUE))
        );

        panelWorkHospital.add(panelHome, "card2");

        lblTitleDoctor.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTitleDoctor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleDoctor.setText("HOSPITAL ADMIN: DOCTOR");

        tableDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Doctor ID", "Doctor Name", "Specilization", "Doctor Age", "Doctor Gender", "Doctor Phone"
            }
        ));
        jScrollPane1.setViewportView(tableDoctor);

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtDoctorRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorRoleActionPerformed(evt);
            }
        });

        lblDoctorRole.setText("Role");

        lblDoctorID.setText("Doctor ID");

        txtDoctorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorIDActionPerformed(evt);
            }
        });

        lblDoctorUsername.setText("User Name");

        txtDoctorUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorUsernameActionPerformed(evt);
            }
        });

        lblDoctorName.setText("Name");

        txtDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorNameActionPerformed(evt);
            }
        });

        lblDoctorAge.setText("Age");

        lblDoctorGender.setText("Gender");

        lblDoctorEmail.setText("Email ID");

        txtDoctorEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorEmailActionPerformed(evt);
            }
        });

        lblDoctorPhone.setText("Phone No");

        lblDoctorHospital.setText("Hospital");

        lblDoctorSpecialization.setText("Specialization");

        lblDoctorExperience.setText("Years of Experience");

        lblDoctorPassword.setText("Password");

        cbDoctorGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panelDoctorLayout = new javax.swing.GroupLayout(panelDoctor);
        panelDoctor.setLayout(panelDoctorLayout);
        panelDoctorLayout.setHorizontalGroup(
            panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDoctorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelDoctorLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDoctorLayout.createSequentialGroup()
                        .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDoctorLayout.createSequentialGroup()
                                .addComponent(lblDoctorRole, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDoctorRole, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(113, 113, 113))
                            .addGroup(panelDoctorLayout.createSequentialGroup()
                                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDoctorID)
                                    .addComponent(lblDoctorUsername)
                                    .addComponent(lblDoctorName)
                                    .addComponent(lblDoctorGender)
                                    .addComponent(lblDoctorEmail)
                                    .addComponent(lblDoctorPhone)
                                    .addComponent(lblDoctorAge))
                                .addGap(43, 43, 43)
                                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDoctorUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(txtDoctorID, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(txtDoctorName)
                                    .addComponent(txtDoctorAge)
                                    .addComponent(txtDoctorEmail)
                                    .addComponent(txtDoctorPhone)
                                    .addComponent(cbDoctorGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDoctorLayout.createSequentialGroup()
                                .addComponent(lblDoctorSpecialization)
                                .addGap(34, 34, 34)
                                .addComponent(txtDoctorSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDoctorLayout.createSequentialGroup()
                                .addComponent(lblDoctorHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(txtDoctorHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panelDoctorLayout.createSequentialGroup()
                                    .addComponent(lblDoctorPassword)
                                    .addGap(57, 57, 57)
                                    .addComponent(txtDoctorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelDoctorLayout.createSequentialGroup()
                                    .addComponent(lblDoctorExperience)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtDoctorExperience, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(161, 161, 161))
                    .addGroup(panelDoctorLayout.createSequentialGroup()
                        .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelDoctorLayout.createSequentialGroup()
                        .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))))
        );

        panelDoctorLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCreate, btnDelete, btnUpdate, btnView});

        panelDoctorLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtDoctorExperience, txtDoctorHospital, txtDoctorPassword, txtDoctorSpecialization});

        panelDoctorLayout.setVerticalGroup(
            panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDoctorLayout.createSequentialGroup()
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDoctorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitleDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnCreate)
                        .addGap(18, 18, 18)
                        .addComponent(btnView)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDoctorLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorRole)
                    .addComponent(lblDoctorHospital)
                    .addComponent(txtDoctorHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorID)
                    .addComponent(lblDoctorSpecialization)
                    .addComponent(txtDoctorSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorUsername)
                    .addComponent(lblDoctorExperience)
                    .addComponent(txtDoctorExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDoctorPassword)
                        .addComponent(txtDoctorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDoctorName)
                        .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorAge)
                    .addComponent(txtDoctorAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorGender)
                    .addComponent(cbDoctorGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorEmail)
                    .addComponent(txtDoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorPhone)
                    .addComponent(txtDoctorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        panelWorkHospital.add(panelDoctor, "card3");

        lblTitlePatient.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTitlePatient.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitlePatient.setText("HOSPITAL ADMIN: PATIENT");

        tablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Patient Age", "Patient Gender", "Patient Phone"
            }
        ));
        jScrollPane2.setViewportView(tablePatient);

        btnPatientCreate.setText("Create");
        btnPatientCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientCreateActionPerformed(evt);
            }
        });

        btnPatientView.setText("View");
        btnPatientView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientViewActionPerformed(evt);
            }
        });

        btnPatientUpdate.setText("Update");
        btnPatientUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientUpdateActionPerformed(evt);
            }
        });

        btnPatientDelete.setText("Delete");
        btnPatientDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientDeleteActionPerformed(evt);
            }
        });

        lblPatientRole.setText("Role");

        lblPatientID.setText("Patient ID");

        lblPatientUsername.setText("Username");

        lblPatientName.setText("Name");

        lblPatientAge.setText("Age");

        lblPatientGender.setText("Gender");

        cbPatientGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblPatientEmail.setText("Email");

        lblPatientPhone.setText("Phone No");

        lblPatientPassword.setText("Password");

        javax.swing.GroupLayout panelPatientLayout = new javax.swing.GroupLayout(panelPatient);
        panelPatient.setLayout(panelPatientLayout);
        panelPatientLayout.setHorizontalGroup(
            panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPatientLayout.createSequentialGroup()
                        .addComponent(lblTitlePatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panelPatientLayout.createSequentialGroup()
                        .addComponent(btnPatientDelete)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPatientLayout.createSequentialGroup()
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelPatientLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPatientRole)
                                    .addComponent(lblPatientID)
                                    .addComponent(lblPatientUsername)
                                    .addComponent(lblPatientName)
                                    .addComponent(lblPatientAge)
                                    .addComponent(lblPatientGender)
                                    .addComponent(lblPatientEmail)
                                    .addComponent(lblPatientPhone))
                                .addGap(31, 31, 31)
                                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPatientRole)
                                    .addComponent(txtPatientID)
                                    .addComponent(txtPatientUsername)
                                    .addComponent(txtPatientName)
                                    .addComponent(txtPatientAge)
                                    .addComponent(cbPatientGender, 0, 89, Short.MAX_VALUE)
                                    .addComponent(txtPatientEmail)
                                    .addComponent(txtPatientPhone))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPatientPassword)
                                .addGap(69, 69, 69)
                                .addComponent(txtPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelPatientLayout.createSequentialGroup()
                                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPatientCreate)
                                    .addComponent(btnPatientView)
                                    .addComponent(btnPatientUpdate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(139, 139, 139))))
        );

        panelPatientLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnPatientCreate, btnPatientDelete, btnPatientUpdate, btnPatientView});

        panelPatientLayout.setVerticalGroup(
            panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitlePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelPatientLayout.createSequentialGroup()
                        .addComponent(btnPatientCreate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPatientView)
                        .addGap(18, 18, 18)
                        .addComponent(btnPatientUpdate)))
                .addGap(18, 18, 18)
                .addComponent(btnPatientDelete)
                .addGap(48, 48, 48)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPatientPassword)
                        .addComponent(txtPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPatientRole)
                        .addComponent(txtPatientRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientID)
                    .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientUsername)
                    .addComponent(txtPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientAge)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientGender)
                    .addComponent(cbPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientEmail)
                    .addComponent(txtPatientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientPhone)
                    .addComponent(txtPatientPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        panelPatientLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnPatientCreate, btnPatientDelete, btnPatientUpdate, btnPatientView});

        panelWorkHospital.add(panelPatient, "card4");

        lblTitleEncounter.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTitleEncounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleEncounter.setText("HOSPITAL ADMIN: ENCOUNTER");

        tableEncounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Encounter No", "Doctor UserName", "Patient Username", "BP", "Temperature"
            }
        ));
        jScrollPane3.setViewportView(tableEncounter);

        btnEncounterCreate.setText("Create");
        btnEncounterCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterCreateActionPerformed(evt);
            }
        });

        btnEncounterView.setText("View");
        btnEncounterView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterViewActionPerformed(evt);
            }
        });

        btnEncounterUpdate.setText("Update");
        btnEncounterUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterUpdateActionPerformed(evt);
            }
        });

        btnEncounterDelete.setText("Delete");
        btnEncounterDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterDeleteActionPerformed(evt);
            }
        });

        lblEncounterNo.setText("Encounter No");

        lblEncounterHospital.setText("Hospital");

        lblDoctorEncounterUsername.setText("Doctor Username");

        lblEncounterPatientUsername.setText("Patient Username");

        lblEncounterDate.setText("Date");

        lblEncounterBP.setText("BP");

        jLabel9.setText("Search");

        lblEncounterTemperature.setText("Temperature");

        lblEncounterMedicine.setText("Medicine");

        lblEncounterMedicineQuantity.setText("Medicine Quantity");

        txtMedicineQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicineQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEncounterLayout = new javax.swing.GroupLayout(panelEncounter);
        panelEncounter.setLayout(panelEncounterLayout);
        panelEncounterLayout.setHorizontalGroup(
            panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEncounterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEncounterLayout.createSequentialGroup()
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitleEncounter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEncounterLayout.createSequentialGroup()
                                .addComponent(btnEncounterCreate)
                                .addGap(194, 194, 194)
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(panelEncounterLayout.createSequentialGroup()
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelEncounterLayout.createSequentialGroup()
                                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnEncounterView)
                                    .addComponent(btnEncounterUpdate)
                                    .addComponent(btnEncounterDelete))
                                .addGap(33, 33, 33)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 155, Short.MAX_VALUE))))
            .addGroup(panelEncounterLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblEncounterHospital)
                    .addComponent(lblEncounterNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDoctorEncounterUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblEncounterPatientUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEncounterNo)
                    .addComponent(txtEncounterHospital)
                    .addComponent(txtEncounterDoctorUsername)
                    .addComponent(txtEncounterPatientUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addGap(83, 83, 83)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEncounterDate)
                    .addComponent(lblEncounterBP)
                    .addComponent(lblEncounterTemperature)
                    .addComponent(lblEncounterMedicine)
                    .addComponent(lblEncounterMedicineQuantity))
                .addGap(39, 39, 39)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEncounterDate, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(txtEncounterBP)
                    .addComponent(txtEncounterTemperature)
                    .addComponent(txtEncounterMedicine)
                    .addComponent(txtMedicineQuantity))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelEncounterLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnEncounterCreate, btnEncounterDelete, btnEncounterUpdate, btnEncounterView});

        panelEncounterLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblDoctorEncounterUsername, lblEncounterBP, lblEncounterDate, lblEncounterHospital, lblEncounterMedicine, lblEncounterMedicineQuantity, lblEncounterNo, lblEncounterPatientUsername, lblEncounterTemperature});

        panelEncounterLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEncounterBP, txtEncounterDate, txtEncounterDoctorUsername, txtEncounterHospital, txtEncounterMedicine, txtEncounterNo, txtEncounterPatientUsername, txtEncounterTemperature, txtMedicineQuantity});

        panelEncounterLayout.setVerticalGroup(
            panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEncounterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEncounterCreate)
                    .addComponent(jLabel9)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelEncounterLayout.createSequentialGroup()
                        .addComponent(btnEncounterView)
                        .addGap(18, 18, 18)
                        .addComponent(btnEncounterUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEncounterDelete))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEncounterNo)
                    .addComponent(txtEncounterNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEncounterDate)
                    .addComponent(txtEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEncounterHospital)
                    .addComponent(txtEncounterHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEncounterBP)
                    .addComponent(txtEncounterBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEncounterLayout.createSequentialGroup()
                        .addComponent(lblDoctorEncounterUsername)
                        .addGap(29, 29, 29)
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEncounterPatientUsername)
                            .addComponent(txtEncounterPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEncounterMedicine)
                            .addComponent(txtEncounterMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEncounterMedicineQuantity)
                            .addComponent(txtMedicineQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEncounterDoctorUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEncounterTemperature)
                        .addComponent(txtEncounterTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(357, Short.MAX_VALUE))
        );

        panelEncounterLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEncounterCreate, btnEncounterDelete, btnEncounterUpdate, btnEncounterView});

        panelWorkHospital.add(panelEncounter, "card5");

        lblTitleHaHospital.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTitleHaHospital.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleHaHospital.setText("HOSPITAL ADMIN: HOSPITAL");

        tableHospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital ID", "Hospital Name", "Email", "Phone"
            }
        ));
        jScrollPane4.setViewportView(tableHospital);

        btnHospitalCreate.setText("Create");
        btnHospitalCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalCreateActionPerformed(evt);
            }
        });

        btnHospitalView.setText("View");
        btnHospitalView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalViewActionPerformed(evt);
            }
        });

        btnHospitalEdit.setText("Update");
        btnHospitalEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalEditActionPerformed(evt);
            }
        });

        btnHospitalDelete.setText("Delete");
        btnHospitalDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalDeleteActionPerformed(evt);
            }
        });

        lblHospitalID.setText("Hospital ID");

        lblHospitalName.setText("Hospital Name");

        lblHospitalEmail.setText("Hospital Email");

        lblHospitalPhone.setText("Phone No");

        txtHospitalName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospitalNameActionPerformed(evt);
            }
        });

        lblHospitalSearch.setText("Search");

        javax.swing.GroupLayout panelHospitalLayout = new javax.swing.GroupLayout(panelHospital);
        panelHospital.setLayout(panelHospitalLayout);
        panelHospitalLayout.setHorizontalGroup(
            panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHospitalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitleHaHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelHospitalLayout.createSequentialGroup()
                        .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHospitalView)
                            .addComponent(btnHospitalEdit)
                            .addComponent(btnHospitalDelete)
                            .addGroup(panelHospitalLayout.createSequentialGroup()
                                .addComponent(btnHospitalCreate)
                                .addGap(209, 209, 209)
                                .addComponent(lblHospitalSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtHospitalSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHospitalLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHospitalID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHospitalName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHospitalEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHospitalPhone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHospitalPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtlblHospitalID, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(198, Short.MAX_VALUE))
        );

        panelHospitalLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHospitalCreate, btnHospitalDelete, btnHospitalEdit, btnHospitalView});

        panelHospitalLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblHospitalEmail, lblHospitalID, lblHospitalName, lblHospitalPhone});

        panelHospitalLayout.setVerticalGroup(
            panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHospitalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleHaHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHospitalCreate)
                    .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHospitalSearch)
                        .addComponent(txtHospitalSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelHospitalLayout.createSequentialGroup()
                        .addComponent(btnHospitalView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHospitalEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHospitalDelete)
                        .addGap(49, 49, 49)
                        .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalID)
                            .addComponent(txtlblHospitalID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalName)
                            .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalEmail)
                            .addComponent(txtHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(panelHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalPhone)
                            .addComponent(txtHospitalPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(417, Short.MAX_VALUE))
        );

        panelHospitalLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnHospitalCreate, btnHospitalDelete, btnHospitalEdit, btnHospitalView});

        panelWorkHospital.add(panelHospital, "card6");

        SplitPaneDoctor.setRightComponent(panelWorkHospital);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneDoctor)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPaneDoctor)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHospitalActionPerformed

    private void btnEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEncounterActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        
        
        String id = txtDoctorID.getText();
        String name = txtDoctorName.getText();
        String username = txtDoctorUsername.getText();
        Integer age = Integer.valueOf(txtDoctorAge.getText());
        String gender = String.valueOf(cbDoctorGender.getSelectedItem());
        String role = txtDoctorRole.getText();
        String emailid= txtDoctorEmail.getText();
        Long phno = Long.valueOf(txtDoctorPhone.getText());
        String pass = txtDoctorPassword.getText();
        Integer experience = Integer.valueOf(txtDoctorExperience.getText());
        String specialization = txtDoctorSpecialization.getText();
        String hospital = txtDoctorHospital.getText();
        
        Doctor newDoctor = system.getDoctorList().addDoctor();
        
        newDoctor.setDoctorId(id);
        newDoctor.setName(name);
        newDoctor.setUsername(username);
        newDoctor.setAge(age);
        newDoctor.setGender(gender);
        newDoctor.setRole(role);
        newDoctor.setEmailId(emailid);
        newDoctor.setPhno(phno);
        newDoctor.setPassword(pass);
        newDoctor.setExperience(experience);
        newDoctor.setSpecialization(specialization);
        newDoctor.setHospital(hospital);
        
        JOptionPane.showMessageDialog(this, "Doctor created successfully");
        
        
        txtDoctorID.setText("");
        txtDoctorName.setText("");
        txtDoctorUsername.setText("");
        txtDoctorAge.setText("");
//        cbDoctorGender.setText("");
        txtDoctorRole.setText("");
        txtDoctorEmail.setText("");
        txtDoctorPhone.setText("");
        txtDoctorPassword.setText("");
        txtDoctorExperience.setText("");
        txtDoctorSpecialization.setText("");
        txtDoctorHospital.setText("");
        
        populateDoctorTable();
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnEncounterCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterCreateActionPerformed
        // TODO add your handling code here:
        String encounterNumber = txtEncounterNo.getText();
        String hospital = txtEncounterHospital.getText();
        String doctorUserName = txtEncounterDoctorUsername.getText();
        String patientUsername = txtEncounterPatientUsername.getText();
        String date = txtEncounterDate.getText();
        
        String BP = txtEncounterBP.getText();
        String temperature = txtEncounterTemperature.getText();
        String medicine = txtEncounterMedicine.getText();
        String medicineQuantity = txtMedicineQuantity.getText();
        
        
        Encounter newEncounter = system.getEncounterlist().addHospitalEncounter();
        
        newEncounter.setEncounterNo(encounterNumber);
        newEncounter.setHospital(hospital);
        newEncounter.setDoctorUserName(doctorUserName);
        newEncounter.setPatientUsername(patientUsername);
        newEncounter.setDate(date);

        newEncounter.setBP(BP);
        newEncounter.setTemperature(temperature);
        newEncounter.setMedicine(medicine);
        newEncounter.setMedicineQuantity(medicineQuantity);


        JOptionPane.showMessageDialog(this, "Encounter created successfully");
        
        
        txtEncounterNo.setText("");
        txtEncounterHospital.setText("");
        txtEncounterDoctorUsername.setText("");
        txtEncounterPatientUsername.setText("");
        txtEncounterDate.setText("");

        txtEncounterBP.setText("");
        txtEncounterTemperature.setText("");
        txtEncounterMedicine.setText("");
        txtMedicineQuantity.setText("");
        
        
        
        populateHospitalEncounterTable();
        
    }//GEN-LAST:event_btnEncounterCreateActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void txtDoctorRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorRoleActionPerformed

    private void txtDoctorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorIDActionPerformed

    private void txtDoctorUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorUsernameActionPerformed

    private void txtDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorNameActionPerformed

    private void btnDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDoctorActionPerformed

    private void txtDoctorEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorEmailActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableDoctor.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        
        else{
            DefaultTableModel model = (DefaultTableModel) tableDoctor.getModel();
            Doctor doc = (Doctor) model.getValueAt(selectedRowIndex,0);
            
            doc.setDoctorId(txtDoctorID.getText());
            doc.setName(txtDoctorName.getText());
            doc.setUsername(txtDoctorUsername.getText());
        
            doc.setAge(Integer.valueOf(txtDoctorAge.getText()));
            doc.setGender(String.valueOf(cbDoctorGender.getSelectedItem()));
        
            doc.setRole(txtDoctorRole.getText());
            doc.setEmailId(txtDoctorEmail.getText());
            doc.setPhno(Long.valueOf(txtDoctorPhone.getText()));
            doc.setPassword(txtDoctorPassword.getText());
            doc.setExperience(Integer.valueOf(txtDoctorExperience.getText()));
            doc.setSpecialization(txtDoctorSpecialization.getText());
            doc.setHospital(txtDoctorHospital.getText());

            JOptionPane.showMessageDialog(this, "Doctor updated successfully");
            
            populateDoctorTable();
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableDoctor.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        
        else{
            DefaultTableModel model = (DefaultTableModel) tableDoctor.getModel();
            Doctor doc = (Doctor) model.getValueAt(selectedRowIndex,0);

            txtDoctorID.setText(doc.getDoctorId());
            txtDoctorName.setText(doc.getName());
            txtDoctorUsername.setText(doc.getUsername());
            txtDoctorAge.setText(String.valueOf(doc.getAge()));
            cbDoctorGender.setSelectedItem(doc.getGender());
            txtDoctorRole.setText(doc.getRole());
            txtDoctorEmail.setText(doc.getEmailId());
            txtDoctorPhone.setText(String.valueOf(doc.getPhno()));
            txtDoctorPassword.setText(doc.getPassword());
            
            txtDoctorHospital.setText(doc.getHospital());
            txtDoctorSpecialization.setText(doc.getSpecialization());
            txtDoctorExperience.setText(String.valueOf(doc.getExperience()));
        }
          
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableDoctor.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableDoctor.getModel();
            Doctor doc = (Doctor) model.getValueAt(selectedRowIndex,0);

            system.getDoctorList().deleteDoctor(doc);
            
            JOptionPane.showMessageDialog(this, "Doctor deleted successfully.");

            //            dB4OUtil.storeSystem(system);
            populateDoctorTable();
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnPatientDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tablePatient.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
            Patient pat = (Patient) model.getValueAt(selectedRowIndex,0);

            system.getPatientList().deletePatient(pat);

            JOptionPane.showMessageDialog(this, "Patient deleted successfully.");
            
            populatePatientTable();
        }
        
    }//GEN-LAST:event_btnPatientDeleteActionPerformed

    private void btnPatientUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientUpdateActionPerformed
        // TODO add your handling code here:
        
        Integer selectedRowIndex = tablePatient.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
            Patient pat = (Patient) model.getValueAt(selectedRowIndex,0);
            
            pat.setPatientId(txtPatientID.getText());
            pat.setName(txtPatientName.getText());
            pat.setUsername(txtPatientUsername.getText());
            pat.setAge(Integer.valueOf(txtPatientAge.getText()));
            pat.setGender(String.valueOf(cbPatientGender.getSelectedItem()));
            pat.setRole(txtPatientRole.getText());
            pat.setEmailId(txtPatientEmail.getText());
            pat.setPhno(Long.valueOf(txtPatientPhone.getText()));
            pat.setPassword(txtPatientPassword.getText());
        
            JOptionPane.showMessageDialog(this, "Patient updated successfully");
            
            populatePatientTable();

        }        
        
    }//GEN-LAST:event_btnPatientUpdateActionPerformed

    private void btnPatientViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tablePatient.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{
                DefaultTableModel model = (DefaultTableModel) tablePatient.getModel();
                Patient pat = (Patient) model.getValueAt(selectedRowIndex,0);  


                txtPatientID.setText(pat.getPatientId());
                txtPatientName.setText(pat.getName());
                txtPatientUsername.setText(pat.getUsername());
                txtPatientAge.setText(String.valueOf(pat.getAge()));
                cbPatientGender.setSelectedItem(pat.getGender());
                txtPatientRole.setText(pat.getRole());
                txtPatientEmail.setText(pat.getEmailId());
                txtPatientPhone.setText(String.valueOf(pat.getPhno()));
                txtPatientPassword.setText(pat.getPassword());
            
        }

    }//GEN-LAST:event_btnPatientViewActionPerformed

    private void btnPatientCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientCreateActionPerformed
        // TODO add your handling code here:
        String id = txtPatientID.getText();
        String name = txtPatientName.getText();
        String username = txtPatientUsername.getText();
        Integer age = Integer.parseInt(txtPatientAge.getText());
        String gender = String.valueOf(cbPatientGender.getSelectedItem());
        String role = txtPatientRole.getText();
        String emailid= txtPatientEmail.getText();
        Long phno = Long.parseLong(txtPatientPhone.getText());
        String pass = txtPatientPassword.getText();
        
        Patient newPatient = system.getPatientList().addPatient();
        
        newPatient.setPatientId(id);
        newPatient.setName(name);
        newPatient.setUsername(username);
        newPatient.setAge(age);
        newPatient.setGender(gender);
        newPatient.setRole(role);
        newPatient.setEmailId(emailid);
        newPatient.setPhno(phno);
        newPatient.setPassword(pass);
        
        JOptionPane.showMessageDialog(this, "Patient created successfully");
        
        txtPatientID.setText("");
        txtPatientName.setText("");
        txtPatientUsername.setText("");
        txtPatientAge.setText("");
//      cbPatientGender
        txtPatientRole.setText("");
        txtPatientEmail.setText("");
        txtPatientPhone.setText("");
        txtPatientPassword.setText("");
        
        
        populatePatientTable();

    }//GEN-LAST:event_btnPatientCreateActionPerformed

    private void btnEncounterViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableEncounter.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{
              
            DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
            Encounter enc = (Encounter) model.getValueAt(selectedRowIndex,0);
            
            txtEncounterNo.setText(enc.getEncounterNo());
            txtEncounterHospital.setText(enc.getHospital());
            txtEncounterDoctorUsername.setText(enc.getDoctorUserName());
            txtEncounterPatientUsername.setText(enc.getPatientUsername());
            txtEncounterDate.setText(enc.getDate());
          
            txtEncounterBP.setText(enc.getBP());
            txtEncounterTemperature.setText(enc.getTemperature());
            txtEncounterMedicine.setText(enc.getMedicine());
            txtMedicineQuantity.setText(enc.getMedicineQuantity());
            
        }
        
    }//GEN-LAST:event_btnEncounterViewActionPerformed

    private void btnEncounterDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableEncounter.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        else{
            DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
            Encounter enc = (Encounter) model.getValueAt(selectedRowIndex,0);

            system.getEncounterlist().deleteHospitalEncounter(enc);

            JOptionPane.showMessageDialog(this, "Encounter deleted successfully.");
            
            populateHospitalEncounterTable();
        }        
    }//GEN-LAST:event_btnEncounterDeleteActionPerformed

    private void btnEncounterUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterUpdateActionPerformed
        // TODO add your handling code here:
                Integer selectedRowIndex = tableEncounter.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        else{
            DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
            Encounter enc = (Encounter) model.getValueAt(selectedRowIndex,0);
            
            enc.setEncounterNo(txtEncounterNo.getText());
            enc.setHospital(txtEncounterHospital.getText());
            enc.setDoctorUserName(txtEncounterDoctorUsername.getText());
            enc.setPatientUsername(txtEncounterPatientUsername.getText());
            enc.setDate(txtEncounterDate.getText());

            enc.setBP(txtEncounterBP.getText());
            enc.setTemperature(txtEncounterTemperature.getText());
            enc.setMedicine(txtEncounterMedicine.getText());
            enc.setMedicineQuantity(txtMedicineQuantity.getText());
            
            JOptionPane.showMessageDialog(this, "Encounter updated successfully");
            

            populateHospitalEncounterTable();
            
          
        }
    }//GEN-LAST:event_btnEncounterUpdateActionPerformed

    private void btnHospitalCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalCreateActionPerformed
        // TODO add your handling code here:
        String hospitalId = txtlblHospitalID.getText();
        String hospitalName = txtHospitalName.getText();
        String hospitalEmail = txtHospitalEmail.getText();
        String hospitalPhone = txtHospitalPhone.getText();
        
        Hospital newHospital = system.getHospitalList().addHospitalHospital();
                
        newHospital.setHospitalID(hospitalId);
        newHospital.setHospitalName(hospitalName);
        newHospital.setHospitalPhone(hospitalPhone);
        newHospital.setHospitalEmail(hospitalEmail);
        
        JOptionPane.showMessageDialog(this, "Hospital created successfully");
        
        txtlblHospitalID.setText("");
        txtHospitalName.setText("");
        txtHospitalEmail.setText("");
        txtHospitalPhone.setText("");
     
        populateHospitalHospitalTable();
        
    }//GEN-LAST:event_btnHospitalCreateActionPerformed

    private void btnHospitalViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalViewActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableHospital.getSelectedRow();

        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tableHospital.getModel();
            Hospital hos = (Hospital) model.getValueAt(selectedRowIndex,0);
            
            txtlblHospitalID.setText(hos.getHospitalID());
            txtHospitalName.setText(hos.getHospitalName());
            txtHospitalEmail.setText(hos.getHospitalEmail());
            txtHospitalPhone.setText(hos.getHospitalPhone());
        
        }
    }//GEN-LAST:event_btnHospitalViewActionPerformed

    private void btnHospitalEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalEditActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableHospital.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tableHospital.getModel();
            Hospital hos = (Hospital) model.getValueAt(selectedRowIndex,0);
        
            hos.setHospitalID(txtlblHospitalID.getText());
            hos.setHospitalName(txtHospitalName.getText());
            hos.setHospitalEmail(txtHospitalEmail.getText());
            hos.setHospitalPhone(txtHospitalPhone.getText());
        }
        
        JOptionPane.showMessageDialog(this, "Hospital updated successfully");
        
        
        populateHospitalHospitalTable();

    }//GEN-LAST:event_btnHospitalEditActionPerformed

    private void btnHospitalDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalDeleteActionPerformed
        // TODO add your handling code here:
        Integer selectedRowIndex = tableHospital.getSelectedRow();
        
        if (selectedRowIndex<0){

            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tableHospital.getModel();
            Hospital hos = (Hospital) model.getValueAt(selectedRowIndex,0);
            
            system.getHospitalList().deleteHospitalHospital(hos);
            
            JOptionPane.showMessageDialog(this, "Hospital deleted successfully.");
            
            populateHospitalHospitalTable();
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_btnHospitalDeleteActionPerformed

    private void txtHospitalNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospitalNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospitalNameActionPerformed

    private void txtMedicineQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicineQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicineQuantityActionPerformed

        private void populateDoctorTable(){
        DefaultTableModel model = (DefaultTableModel) tableDoctor.getModel();
        model.setRowCount(0);
        
//        
            for(Doctor c: system.getDoctorList().getDoctorList()){

                Object[] row = new Object[5];
                row[0] = c; 
                row[1] = c.getDoctorId();
                row[2] = c.getName();
                row[3] = c.getSpecialization();
                row[4] = c.getAge();
                row[5] = c.getGender();
                row[6] = c.getPhno();
                model.addRow(row);
            }
    }
        private void populatePatientTable(){
        DefaultTableModel model = (DefaultTableModel) tableDoctor.getModel();
        model.setRowCount(0);
        
//        
//            for(Patient c: system.getDoctorList().getDoctorList()){
              for(Patient p: system.getPatientList().getPatientList()){
                  
                Object[] row = new Object[5];
                row[0] = p;
                row[1] = p.getPatientId();
                row[2] = p.getName();
                row[3] = p.getAge();
                row[4] = p.getGender();
                row[5] = p.getPhno();
          
                model.addRow(row);
            }
    }
        
        private void populateHospitalEncounterTable(){
        DefaultTableModel model = (DefaultTableModel) tableEncounter.getModel();
        model.setRowCount(0);
        
            for(Encounter e: system.getEncounterlist().getHospitalEncounterList()){
                  
                Object[] row = new Object[5];
                row[0] = e;
                row[1] = e.getEncounterNo();
                row[2] = e.getDoctorUserName();
                row[3] = e.getPatientUsername(); 
                row[4] = e.getBP();
                row[5] = e.getTemperature();

                model.addRow(row);
            }
    }    
     
        private void populateHospitalHospitalTable(){
        DefaultTableModel model = (DefaultTableModel) tableHospital.getModel();
        model.setRowCount(0);
        
//            for(Hospital h: system.getEncounterlist().getHospitalEncounterList())
            for(Hospital h: system.getHospitalList().getHospitalHospitalList()){
                  
                Object[] row = new Object[5];
                row[0] = h;
                row[1] = h.getHospitalID();
                row[2] = h.getHospitalName();
                row[3] = h.getHospitalEmail();
                row[4] = h.getHospitalPhone();
                
                model.addRow(row);
            }
    } 
        
        
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane SplitPaneDoctor;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDoctor;
    private javax.swing.JButton btnEncounter;
    private javax.swing.JButton btnEncounterCreate;
    private javax.swing.JButton btnEncounterDelete;
    private javax.swing.JButton btnEncounterUpdate;
    private javax.swing.JButton btnEncounterView;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnHospital;
    private javax.swing.JButton btnHospitalCreate;
    private javax.swing.JButton btnHospitalDelete;
    private javax.swing.JButton btnHospitalEdit;
    private javax.swing.JButton btnHospitalView;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnPatient;
    private javax.swing.JButton btnPatientCreate;
    private javax.swing.JButton btnPatientDelete;
    private javax.swing.JButton btnPatientUpdate;
    private javax.swing.JButton btnPatientView;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnVitalSigns;
    private javax.swing.JComboBox<String> cbDoctorGender;
    private javax.swing.JComboBox<String> cbPatientGender;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lblDoctorAge;
    private javax.swing.JLabel lblDoctorEmail;
    private javax.swing.JLabel lblDoctorEncounterUsername;
    private javax.swing.JLabel lblDoctorExperience;
    private javax.swing.JLabel lblDoctorGender;
    private javax.swing.JLabel lblDoctorHospital;
    private javax.swing.JLabel lblDoctorID;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblDoctorPassword;
    private javax.swing.JLabel lblDoctorPhone;
    private javax.swing.JLabel lblDoctorRole;
    private javax.swing.JLabel lblDoctorSpecialization;
    private javax.swing.JLabel lblDoctorUsername;
    private javax.swing.JLabel lblEncounterBP;
    private javax.swing.JLabel lblEncounterDate;
    private javax.swing.JLabel lblEncounterHospital;
    private javax.swing.JLabel lblEncounterMedicine;
    private javax.swing.JLabel lblEncounterMedicineQuantity;
    private javax.swing.JLabel lblEncounterNo;
    private javax.swing.JLabel lblEncounterPatientUsername;
    private javax.swing.JLabel lblEncounterTemperature;
    private javax.swing.JLabel lblHospitalEmail;
    private javax.swing.JLabel lblHospitalID;
    private javax.swing.JLabel lblHospitalName;
    private javax.swing.JLabel lblHospitalPhone;
    private javax.swing.JLabel lblHospitalSearch;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientEmail;
    private javax.swing.JLabel lblPatientGender;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientPassword;
    private javax.swing.JLabel lblPatientPhone;
    private javax.swing.JLabel lblPatientRole;
    private javax.swing.JLabel lblPatientUsername;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblTitleDoctor;
    private javax.swing.JLabel lblTitleEncounter;
    private javax.swing.JLabel lblTitleHaHospital;
    private javax.swing.JLabel lblTitleHospital;
    private javax.swing.JLabel lblTitlePatient;
    private javax.swing.JPanel panelControlHospital;
    private javax.swing.JPanel panelDoctor;
    private javax.swing.JPanel panelEncounter;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel panelHospital;
    private javax.swing.JPanel panelPatient;
    private javax.swing.JPanel panelWorkHospital;
    private javax.swing.JTable tableDoctor;
    private javax.swing.JTable tableEncounter;
    private javax.swing.JTable tableHospital;
    private javax.swing.JTable tablePatient;
    private javax.swing.JTextField txtDoctorAge;
    private javax.swing.JTextField txtDoctorEmail;
    private javax.swing.JTextField txtDoctorExperience;
    private javax.swing.JTextField txtDoctorHospital;
    private javax.swing.JTextField txtDoctorID;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDoctorPassword;
    private javax.swing.JTextField txtDoctorPhone;
    private javax.swing.JTextField txtDoctorRole;
    private javax.swing.JTextField txtDoctorSpecialization;
    private javax.swing.JTextField txtDoctorUsername;
    private javax.swing.JTextField txtEncounterBP;
    private javax.swing.JTextField txtEncounterDate;
    private javax.swing.JTextField txtEncounterDoctorUsername;
    private javax.swing.JTextField txtEncounterHospital;
    private javax.swing.JTextField txtEncounterMedicine;
    private javax.swing.JTextField txtEncounterNo;
    private javax.swing.JTextField txtEncounterPatientUsername;
    private javax.swing.JTextField txtEncounterTemperature;
    private javax.swing.JTextField txtHospitalEmail;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JTextField txtHospitalPhone;
    private javax.swing.JTextField txtHospitalSearch;
    private javax.swing.JTextField txtMedicineQuantity;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientEmail;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientPassword;
    private javax.swing.JTextField txtPatientPhone;
    private javax.swing.JTextField txtPatientRole;
    private javax.swing.JTextField txtPatientUsername;
    private javax.swing.JTextField txtlblHospitalID;
    // End of variables declaration//GEN-END:variables
}
